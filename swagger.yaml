swagger: '2.0'
info:
  version: '1.0'
  title: API
  description: API
host: localhost:3000
basePath: /
securityDefinitions:
  auth:
    type: oauth2
    flow: implicit
    authorizationUrl: 'localhost/api'
    scopes: {}
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /user/register:
    post:
      summary: register
      tags:
        - User
      operationId: UserRegister
      produces:
        - application/json
      description: |
        - description
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/RegisterRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: |
          schema:
            $ref: '#/definitions/RegisterResponse'
        '422':
          description: ''
          schema:
            $ref: '#/definitions/422RegisterResponse'
        '409':
          description: ''
          schema:
            $ref: '#/definitions/409RegisterResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/400Response'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/500Response'
  /user/login:
    post:
      summary: login
      tags:
        - User
      operationId: UserLogin
      produces:
        - application/json
      description: |
        - description
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/LoginRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: |
          schema:
            $ref: '#/definitions/LoginResponse'
        '422':
          description: ''
          schema:
            $ref: '#/definitions/422LoginResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/400LoginResponse'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/500Response'
definitions:
  RegisterRequest:
    title: Register Request
    example:
      email: 'abc@gmail.com'
      password: '1234'
    type: object
    properties:
      email:
        description: ''
        example: 'abc@gmail.com'
        type: string
      password:
        description: ''
        example: '1234'
        type: string
    required:
      - email
      - password
  LoginRequest:
    title: Login Request
    example:
      email: 'abc@gmail.com'
      password: '1234'
    type: object
    properties:
      email:
        description: ''
        example: 'abc@gmail.com'
        type: string
      password:
        description: ''
        example: '1234'
        type: string
    required:
      - email
      - password
  RegisterResponse:
    title: Login Response
    type: object
    properties:
      status:
        description: ''
        example: 200
        type: integer
      data:
        description: ''
        example: {
          "username": "tanhle10@gmail.com",
          "password": "$2b$10$CefvBAVQkn7B6swXSGIfH.DaHr.hvMSKOPM/h7Vq4uq.iOLbp92kq",
          "_id": "61c34dd6c5ae354378aa5578",
          "__v": 0 
        }
        type: object
  422RegisterResponse:
    title: Response 422 register
    type: object
    properties:
      status:
        description: ''
        example: 422
        type: integer
      message:
        description: ''
        example: "\"password\" length must be at least 4 characters long"
        type: string
  409RegisterResponse:
    title: Response 409 register
    type: object
    properties:
      status:
        description: ''
        example: 409
        type: integer
      message:
        description: ''
        example: "abc@gmail.com has been registerd"
        type: string
  LoginResponse:
    title: Login Response
    type: object
    properties:
      status:
        description: ''
        example: 200
        type: integer
      data:
        description: ''
        example: {
          access_token:
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBpLnRlc3QvdjEvYXV0aC9sb2dpbiIsImlhdCI6MTUzNjY2NTI2MCwiZXhwIjoxNTM3MjcwMDYwLCJuYmYiOjE1MzY2NjUyNjAsImp0aSI6Ik5oOWZTZWM3ZWJmazlmbVUiLCJzdWIiOjEsInBydiI6Ijk5ZjY5YmNiM2FmODQ2YjBmMDg0NTc4NWI1NjQwMDdiYTBiYmVlMzYifQ.6ddLlUibggojItxv0xMBWkq10-K3i8eSCugJVpJvTRU,
          fresh_token:
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBpLnRlc3QvdjEvYXV0aC9sb2dpbiIsImlhdCI6MTUzNjY2NTI2MCwiZXhwIjoxNTM3MjcwMDYwLCJuYmYiOjE1MzY2NjUyNjAsImp0aSI6Ik5oOWZTZWM3ZWJmazlmbVUiLCJzdWIiOjEsInBydiI6Ijk5ZjY5YmNiM2FmODQ2YjBmMDg0NTc4NWI1NjQwMDdiYTBiYmVlMzYifQ.6ddLlUibggojItxv0xMBWkq10-K3i8eSCugJVpJvTRU
        }
        type: object
  422LoginResponse:
    title: Response 422 login
    type: object
    properties:
      status:
        description: ''
        example: 422
        type: integer
      message:
        description: ''
        example: "\"password\" length must be at least 4 characters long"
        type: string
  400LoginResponse:
    title: Response 400 login
    type: object
    properties:
      status:
        description: ''
        example: 400
        type: integer
      message:
        description: ''
        example: "Bad request"
        type: string
  400Response:
    title: Response 400
    type: object
    properties:
      status:
        description: ''
        example: 400
        type: integer
      message:
        description: ''
        example: "Bad request"
        type: string
  426Response:
    title: Response 426
    type: object
    properties:
      code:
        description: ''
        example: 426
        type: integer
      status:
        description: ''
        example: 'error'
        type: string
      data:
        description: ''
        example: [
          {
            'latest_version': '0.0.1',
            'version_url': 'http://version.com'
          }  
        ]
        type: object
      messages:
        description: ''
        example: []
        type: object
      message:
        description: ''
        example: "Upgrade request."
  429Response:
    title: Response 429
    type: object
    properties:
      code:
        description: ''
        example: 429
        type: integer
      status:
        description: ''
        example: 'error'
        type: string
      data:
        description: ''
        example: []
        type: object
      messages:
        description: ''
        example: []
        type: object
      message:
        description: ''
        example: "You can issue a PIN every 30 seconds, so please be patient."
      retry_after:
        description: ''
        example: 15
        type: integer
  500Response:
    title: Response 500
    type: object
    properties:
      status:
        description: ''
        example: 500
        type: integer
      message:
        description: ''
        example: "Server internal error."
  401Response:
    title: Response 401
    type: object
    properties:
      code:
        description: ''
        example: 401
        type: integer
      status:
        description: ''
        example: 'error'
        type: string
      data:
        description: ''
        example: []
        type: object
      messages:
        description: ''
        example: []
        type: object
      message:
        description: ''
        example: "Authentication is required."
  403Response:
    title: Response 403
    type: object
    properties:
      code:
        description: ''
        example: 403
        type: integer
      status:
        description: ''
        example: 'error'
        type: string
      data:
        description: ''
        example: []
        type: object
      messages:
        description: ''
        example: []
        type: object
      message:
        description: ''
        example: "Authentication is required."
  201Response:
    title:  201 Response
    type: object
    properties:
      code:
        description: ''
        example: 201
        type: integer
      status:
        description: ''
        example: 'success'
        type: string
      data:
        description: ''
        example: {}
        type: object
  200Response:
    title:  200 Response
    type: object
    properties:
      status:
        description: ''
        example: 200
        type: integer
      data:
        description: ''
        example: {}
        type: object
  404Response:
    title: Response 404
    type: object
    properties:
      code:
        description: ''
        example: 404
        type: integer
      status:
        description: ''
        example: 'error'
        type: string
      data:
        description: ''
        example: []
        type: object
      messages:
        description: ''
        example: []
        type: object
      message:
        description: ''
        example: "Not detected."
        type: string